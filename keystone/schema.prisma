// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                      String       @id @default(cuid())
  name                    String       @default("")
  last_name               String       @default("")
  email                   String       @unique @default("")
  password                String
  user_type               String       @default("")
  from_Content_user_id    Content[]    @relation("Content_user_id")
  from_Answer_user_id     Answer[]     @relation("Answer_user_id")
  from_Assignment_user_id Assignment[] @relation("Assignment_user_id")
  from_Session_user_id    Session[]    @relation("Session_user_id")
  from_Plan_user_id       Plan[]       @relation("Plan_user_id")
}

model MediaTable {
  id                    String    @id @default(cuid())
  title                 String    @default("")
  text                  Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  content               Content?  @relation("MediaTable_content", fields: [contentId], references: [id])
  contentId             String?   @map("content")
  from_Content_media_id Content[] @relation("Content_media_id")

  @@index([contentId])
}

model Image {
  id              String  @id @default(cuid())
  name            String  @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
}

model Video {
  id            String  @id @default(cuid())
  name          String  @default("")
  file_filesize Int?
  file_filename String?
}

model AudioFile {
  id            String  @id @default(cuid())
  name          String  @default("")
  file_filesize Int?
  file_filename String?
}

model Content {
  id                      String       @id @default(cuid())
  name                    String       @default("")
  description             String       @default("")
  media_id                MediaTable?  @relation("Content_media_id", fields: [media_idId], references: [id])
  media_idId              String?      @map("text")
  user_id                 User?        @relation("Content_user_id", fields: [user_idId], references: [id])
  user_idId               String?      @map("user_id")
  from_MediaTable_content MediaTable[] @relation("MediaTable_content")

  @@index([media_idId])
  @@index([user_idId])
}

model Question {
  id                      String   @id @default(cuid())
  description             String   @default("")
  from_Answer_question_id Answer[] @relation("Answer_question_id")
}

model Answer {
  id            String    @id @default(cuid())
  answer        Int?
  question_id   Question? @relation("Answer_question_id", fields: [question_idId], references: [id])
  question_idId String?   @map("description")
  user_id       User?     @relation("Answer_user_id", fields: [user_idId], references: [id])
  user_idId     String?   @map("user_id")

  @@index([question_idId])
  @@index([user_idId])
}

model Assignment {
  id                      String  @id @default(cuid())
  title                   String  @default("")
  description             String  @default("")
  user_id                 User?   @relation("Assignment_user_id", fields: [user_idId], references: [id])
  user_idId               String? @map("user_id")
  from_Plan_assignment_id Plan[]  @relation("Plan_assignment_id")

  @@index([user_idId])
}

model Session {
  id                   String    @id @default(cuid())
  start_date           DateTime?
  end_date             DateTime?
  entry_code           Int?
  user_id              User?     @relation("Session_user_id", fields: [user_idId], references: [id])
  user_idId            String?   @map("user_id")
  from_Plan_session_id Plan[]    @relation("Plan_session_id")

  @@index([user_idId])
}

model Plan {
  id              String      @id @default(cuid())
  user_id         User?       @relation("Plan_user_id", fields: [user_idId], references: [id])
  user_idId       String?     @map("user_id")
  session_id      Session?    @relation("Plan_session_id", fields: [session_idId], references: [id])
  session_idId    String?     @map("start_date")
  assignment_id   Assignment? @relation("Plan_assignment_id", fields: [assignment_idId], references: [id])
  assignment_idId String?     @map("title")
  note            String      @default("")

  @@index([user_idId])
  @@index([session_idId])
  @@index([assignment_idId])
}